version: '3.8'

services:
  th-backend:
    build: 
      context: ./th-backend
      dockerfile: Dockerfile
    container_name: th-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://th-db:5432/th_backend
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-password}
      - JWT_SECRET=${JWT_SECRET:-mysecretkey}
      - JWT_TIME=${JWT_TIME:-86400000}
      - SPRING_RABBITMQ_HOST=th-rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    depends_on:
      - th-db
      - th-rabbitmq
    networks:
      - backend
    restart: unless-stopped

  th-db:
    image: postgis/postgis:15-3.4
    container_name: th-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-th_backend}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped

  th-rabbitmq:
    image: rabbitmq:3-management
    container_name: th-rabbitmq
    ports:
      - "5672:5672"     # RabbitMQ message port
      - "15672:15672"   # RabbitMQ management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  backend:
    driver: bridge
