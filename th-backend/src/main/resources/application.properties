spring.application.name=th-backend

spring.jpa.open-in-view=false

server.port=8080

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com

jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_TIME}

spring.profiles.active=local
# Kafka Bootstrap Servers
spring.kafka.bootstrap-servers=localhost:9092

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

# Consumer Configuration
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=com.tablehub.thbackend.dto.websocket.TableUpdateEvent

# Auto-create topics (optional, for development)
spring.kafka.admin.auto-create=true